[[annotation]]
file="exac.vcf.gz"
# the special name 'ID' pulls out the rs id from the VCF
fields = ["AC_AFR", "AC_AMR", "AC_EAS", "ID"]
ops=["first", "first", "first", "first"]

[[annotation]]
# count is for alignments that are mapped (-F4) with mapq > 0
file="ex.bam"
names=["mapq", "coverage", "xdp2"] # map, coverage, and seq are special values for bam annotations
fields=["mapq", "coverage", "DP2"]
ops=["mean", "sum", "DP2"] # op can be anything for DP2 field.


[[annotation]]
file="fitcons.bed.gz"
names=["lua_start", "lua_end", "lua_len", "lua_mean", "lua_loc"]
columns=[4, 4, 4, 4, 4]
# when a custom value is needed, specify arbitrary lua after "lua:"
# the variable available will be:
# + vals: the list of values from this annotation
# + chrom: the chrom of the variant being annotated
# + start: the (0-based) start of the variant being annotated
# + stop: the end of the variant being annotated
# the result of the expression can be anything. it will be converted to a string.
# loc() and mean() are defined in examples/custom.lua
ops=["lua:start", "lua:stop", "lua:#vals", "lua:mean(vals)", "lua:loc(chrom, start, stop)"]
# note the last 2 use functions declared in lua above.

# it is also possible to define some lua functions that will be
# available. This is specified as a .lua file to the vcfanno executable as
# ./vcfanno -lua some.lua ... see example/custom.lua for an example.
#
[[postannotation]]
fields=["lua_start"]
op="lua:lua_start - 2"
name="lua_start_minus_2"
type="Integer"
